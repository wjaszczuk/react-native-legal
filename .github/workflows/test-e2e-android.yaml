name: E2E tests - Android

on:
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/test-e2e-android.yaml'
      - 'examples/bare-example/e2e/checkLicenses/android.yaml'
      - 'packages/react-native-legal/**/*.[tj]sx?'
      - 'packages/react-native-legal/android/**'
      - 'packages/licenses-api/**/*.[tj]sx?'
      - 'examples/bare-example/**/*.[tj]sx?'
      - 'examples/bare-example/android/**'

  push:
    branches:
      - main

  workflow_dispatch:

concurrency:
  group: e2e_tests-android-${{ github.ref }}
  cancel-in-progress: true

env:
  MAESTRO_CLI_NO_ANALYTICS: true
  MAESTRO_CLI_ANALYSIS_NOTIFICATION_DISABLED: true
  MAESTRO_DISABLE_UPDATE_CHECK: true

jobs:
  build-release:
    runs-on: ubuntu-latest
    outputs:
      artifact-id: ${{ steps.rnef-remote-build-android.outputs.artifact-id }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup
        uses: ./.github/actions/setup

      - name: Run generate:legal from bare-example
        run: yarn workspace react-native-legal-bare-example generate:legal
        shell: bash

      - name: "[WORKAROUND] run generateCodegenArtifactsFromSchema manually for example app"
        shell: bash
        run: |
          cd examples/bare-example/android
          ./gradlew generateCodegenArtifactsFromSchema

      - name: RNEF Remote Build - Android
        id: rnef-remote-build-android
        uses: callstackincubator/android@v1
        with:
          variant: release
          github-token: ${{ secrets.GITHUB_TOKEN }}
          sign: false
          comment-bot: false
          working-directory: ./examples/bare-example

  run-e2e-tests:
    runs-on: ubuntu-latest
    needs: build-release
    strategy:
      fail-fast: false
      matrix:
        api-level: [ 30, 33, 35 ]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup
        uses: ./.github/actions/setup

      - name: Install Maestro
        uses: ./.github/actions/installMaestro
        with:
          target-platform: android

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Download and Unpack APK artifact
        run: |
          curl -L -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -o artifact.zip "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/${{ needs.build-release.outputs.artifact-id }}/zip"
          unzip artifact.zip -d downloaded-artifacts
          ls -l downloaded-artifacts
          APK_PATH=$(pwd)/$(find downloaded-artifacts -name "*.apk" -print -quit)
          echo "ARTIFACT_PATH_FOR_E2E=$APK_PATH" >> $GITHUB_ENV
        shell: bash

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: 'x86_64'
          target: 'google_apis'
          force-avd-creation: false
          cores: 4
          emulator-options: -verbose -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-front none -camera-back none
          disable-animations: false
          ram-size: '6144M'
          script: echo "Generated AVD snapshot for caching."

      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: 'x86_64'
          target: 'google_apis'
          force-avd-creation: false
          cores: 4
          emulator-options: -verbose -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-front none -camera-back none
          disable-animations: false
          ram-size: '6144M'
          script: |
            adb install -r "$ARTIFACT_PATH_FOR_E2E"
            yarn workspace react-native-legal-bare-example e2e:android

      - name: Upload report
        if: always()
        continue-on-error: true
        uses: ./.github/actions/uploadMaestroTestResults
        with:
          id: API ${{ matrix.api-level }}
